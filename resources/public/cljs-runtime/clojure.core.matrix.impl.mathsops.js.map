{"version":3,"sources":["clojure/core/matrix/impl/mathsops.cljc"],"mappings":";;AAMA,AAAA,AAAcA,AACHC;AADX,AAGW,AAAG,AAAA,AAAGA,AAASC;;AAE1B,AAAA,AAAcC,AACHF;AADX,AAGW,AAAA,AAAG,AAAGA,AAAEC;;AAEnB,AAAA,AAAA,AAAKE;AAsCL,AAAA,AAAAC,AAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAL;;;AAAA,AAAAM,AAAA,AAAAN;AAAA,AAAA,AAAAO,AAAAP;;;AAAA,AAAAQ,AAAA,AAAAR;AAAA,AAAA,AAAAS,AAAAT;;;AAAA,AAAAU,AAAA,AAAAV;AAAA,AAAA,AAAAW,AAAAX;;;AAAA,AAAAY,AAAA,AAAAZ;AAAA,AAAA,AAAAa,AAAAb;;;AAAA,AAAAc,AAAA,AAAAd;AAAA,AAAA,AAAAe,AAAAf;;;AAAA,AAAAgB,AAAA,AAAAhB;AAAA,AAAA,AAAAiB,AAAAjB;;;AAAA,AAAAkB,AAAA,AAAAlB;AAAA,AAAA,AAAAmB,AAAAnB;;;AAAA,AAAAoB,AAAA,AAAApB;AAAA,AAAA,AAAAqB,AAAArB;;;AAAA,AAAAsB,AAAA,AAAAtB;AAAA,AAAA,AAAAuB,AAAAvB;;;AAAA,AAAAwB,AAAA,AAAAxB;AAAA,AAAA,AAAAyB,AAAAzB;;;AAAA,AAAA0B,AAAA,AAAA1B;AAAA,AAAA,AAAA2B,AAAA3B;;;AAAA,AAAA4B,AAAA,AAAA5B;AAAA,AAAA,AAAA6B,AAAA7B;;;AAAA,AAAA8B,AAAA,AAAA9B;AAAA,AAAA,AAAA+B,AAAA/B;;;AAAA,AAAAgC,AAAA,AAAAhC;AAAA,AAAA,AAAAiC,AAAAjC;;;AAAA,AAAAkC,AAAA,AAAAlC;AAAA,AAAA,AAAAmC,AAAAnC;;;AAAA,AAAAoC,AAAA,AAAApC;AAAA,AAAA,AAAAqC,AAAArC;;;AAAA,AAAAsC,AAAA,AAAAtC;AAAA,AAAA,AAAAuC,AAAAvC;;;AAAA,AAAAwC,AAAA,AAAAxC;AAAA,AAAA,AAAAyC,AAAAzC;;;AAAA,AAAA0C,AAAA,AAAA1C;AAAA,AAAA,AAAA2C,AAAA3C;;;AAAA,AAAA4C,AAAA,AAAA5C;AAAA,AAAA,AAAA6C,AAAA7C","names":["clojure.core.matrix.impl.mathsops/to-degrees*","x","Math/PI","clojure.core.matrix.impl.mathsops/to-radians*","clojure.core.matrix.impl.mathsops/maths-ops","clojure.core.matrix.impl.mathsops/abs","Math/abs","clojure.core.matrix.impl.mathsops/acos","Math/acos","clojure.core.matrix.impl.mathsops/asin","Math/asin","clojure.core.matrix.impl.mathsops/atan","Math/atan","clojure.core.matrix.impl.mathsops/cbrt","Math/cbrt","clojure.core.matrix.impl.mathsops/ceil","Math/ceil","clojure.core.matrix.impl.mathsops/cos","Math/cos","clojure.core.matrix.impl.mathsops/cosh","Math/cosh","clojure.core.matrix.impl.mathsops/exp","Math/exp","clojure.core.matrix.impl.mathsops/floor","Math/floor","clojure.core.matrix.impl.mathsops/log","Math/log","clojure.core.matrix.impl.mathsops/log10","Math/log10","clojure.core.matrix.impl.mathsops/round","Math/rint","clojure.core.matrix.impl.mathsops/signum","Math/signum","clojure.core.matrix.impl.mathsops/sin","Math/sin","clojure.core.matrix.impl.mathsops/sinh","Math/sinh","clojure.core.matrix.impl.mathsops/sqrt","Math/sqrt","clojure.core.matrix.impl.mathsops/tan","Math/tan","clojure.core.matrix.impl.mathsops/tanh","Math/tanh","clojure.core.matrix.impl.mathsops/to-degrees","Math/toDegrees","clojure.core.matrix.impl.mathsops/to-radians","Math/toRadians"],"sourcesContent":["(ns clojure.core.matrix.impl.mathsops\n  #?(:cljs (:require-macros [clojure.core.matrix.impl.mathsops :refer [def-mop def-mops]])))\n\n;; data structure for code generation of maths operations\n;; format is (<symbol> <java.lang.Math equivalent>)\n\n(defn ^double to-degrees*\n  [^double x]\n  #?(:clj (Math/toDegrees x)\n     :cljs (/ (* x 180.0) Math/PI)))\n\n(defn ^double to-radians*\n  [^double x]\n  #?(:clj (Math/toRadians x)\n     :cljs (/ (* x Math/PI) 180.0)))\n\n(def maths-ops\n  '[(abs Math/abs)\n    (acos Math/acos)\n    (asin Math/asin)\n    (atan Math/atan)\n    (cbrt Math/cbrt)\n    (ceil Math/ceil)\n    (cos Math/cos)\n    (cosh Math/cosh)\n    (exp Math/exp)\n    (floor Math/floor)\n    (log Math/log)\n    (log10 Math/log10)\n    (round Math/rint)\n    (signum Math/signum Math/sign)\n    (sin Math/sin)\n    (sinh Math/sinh)\n    (sqrt Math/sqrt)\n    (tan Math/tan)\n    (tanh Math/tanh)\n    (to-degrees Math/toDegrees to-degrees*)\n    (to-radians Math/toRadians to-radians*)])\n\n(defmacro def-mop\n  \"Define a mathematical operator function.\"\n  [op-sym fn-sym]\n  `(defn ~op-sym\n     ~(vary-meta\n        `([~(vary-meta 'x assoc :tag 'double)]\n          (~fn-sym ~'x))\n        assoc :tag double)))\n\n(defmacro def-mops\n  []\n  `(do\n     ~@(for [[sym# op#] maths-ops]\n         `(def-mop ~sym# ~op#))))\n\n(def-mops)\n\n"]}